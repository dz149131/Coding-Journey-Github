body {
    font-family: 'Courier New', Courier, monospace;
}
h1 {
    text-align: center;
}
h2 {
    text-align: center;
}
a {
    color: rgba(255, 0, 0, 0.705);
    font-weight: bolder;
    text-transform: capitalize;
}
a:hover {
    background-color: #58815770;
    border-radius: 1em;
    border: #344e41 1px solid;
}
#justify-content_flex-start {
    background-color:#003049;
    width: auto;
    height: auto;
    margin: .5em auto;
    border: 1px solid #066597;
    border-radius: 1em;
    display: flex;
    justify-content: flex-start;
    padding: 1em;
}
#justify-content_flex-start div {
    width: auto;
    height: auto;
    display: flex;
    border: rgb(0, 0, 0) 1px solid;
    border-radius: .5em;
    justify-content: center;
    padding: 1em;
}
#justify-content_flex-end {
    background-color:#003049;
    width: auto;
    height: auto;
    margin: .5em auto;
    border: 1px solid #066597;
    border-radius: 1em;
    display: flex;
    justify-content: flex-end;
    padding: 1em;
}
#justify-content_flex-end div {
    width: auto;
    height: auto;
    display: flex;
    border: rgb(0, 0, 0) 1px solid;
    border-radius: .5em;
    justify-content: center;
    padding: 1em;
}
#justify-content_center {
    background-color:#003049;
    width: auto;
    height: auto;
    margin: .5em auto;
    border: 1px solid #066597;
    border-radius: 1em;
    display: flex;
    justify-content: center;
    padding: 1em;
}
#justify-content_center div {
    width: auto;
    height: auto;
    display: flex;
    border: rgb(0, 0, 0) 1px solid;
    border-radius: .5em;
    justify-content: center;
    padding: 1em;
}
#justify-content_space-between {
    background-color:#003049;
    width: auto;
    height: auto;
    margin: .5em auto;
    border: 1px solid #066597;
    border-radius: 1em;
    display: flex;
    justify-content: space-between;
    padding: 1em;
}
#justify-content_space-between div {
    width: auto;
    height: auto;
    display: flex;
    border: rgb(0, 0, 0) 1px solid;
    border-radius: .5em;
    justify-content: center;
    padding: 1em;
}
#justify-content_space-around {
    background-color:#003049;
    width: auto;
    height: auto;
    margin: .5em auto;
    border: 1px solid #066597;
    border-radius: 1em;
    display: flex;
    justify-content: space-around;
    padding: 1em;
}
#justify-content_space-around div {
    width: auto;
    height: auto;
    display: flex;
    border: rgb(0, 0, 0) 1px solid;
    border-radius: .5em;
    justify-content: center;
    padding: 1em;
}
#justify-content_space-evenly {
    background-color:#003049;
    width: auto;
    height: auto;
    margin: .5em auto;
    border: 1px solid #066597;
    border-radius: 1em;
    display: flex;
    justify-content: space-evenly;
    padding: 1em;
}
#justify-content_space-evenly div {
    width: auto;
    height: auto;
    display: flex;
    border: rgb(0, 0, 0) 1px solid;
    border-radius: .5em;
    justify-content: center;
    padding: 1em;
}
#container_justify-content_MDN {
    height: auto;
    width: auto;
    border: #cdb4db solid 5px;
}
#container_justify-content_MDN {
display: flex;
justify-content: space-between; 
}
#container_justify-content_MDN > div {
width: 100px;
height: 100px;
background-color: #8ecae6;
border: black solid 1px;
}
#align-items_MDN {
    display: flex;
    align-items: center;
    justify-content: center;
}
#container_align-items_MDN {
    height: 300px;
    width: 200px;
    align-items: center; 
    background-color: #8c8c8c;
}
.flex {
    display: flex;
    flex-wrap: wrap;
}
div > div {
    box-sizing: border-box;
    border: 2px solid #8c8c8c;
    width: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
}
#item1_align-items {
    background-color: #8cffa0;
    min-height: 30px;
}
#item2_align-items {
    background-color: #a0c8ff;
    min-height: 50px;
}
#item3_align-items {
    background-color: #ffa08c;
    min-height: 40px;
}
#item4_align-items {
    background-color: #ffff8c;
    min-height: 60px;
}
#item5_align-items {
    background-color: #ff8cff;
    min-height: 70px;
}
#item6_align-items {
    background-color: #8cffff;
    min-height: 50px;
    font-size: 30px;
}
#align-content_MDN {
    display: flex;
    align-items: center;
    justify-content: center;
}
#container_align-content_MDN {
    height: 200px;
    width: 240px;
    align-content: center;
    background-color: #8c8c8c;
}
#item1_align-content {
    background-color: #8cffa0;
    min-height: 30px;
}
#item2_align-content {
    background-color: #a0c8ff;
    min-height: 50px;
}
#item3_align-content {
    background-color: #ffa08c;
    min-height: 40px;
} 
#item4_align-content {
    background-color: #ffff8c;
    min-height: 60px;
}
#item5_align-content {
    background-color: #ff8cff;
    min-height: 70px;
}
#item6_align-content {
    background-color: #8cffff;
    min-height: 50px;
    font-size: 30px;
}

/* DISPLAY FLEX NOTES
display: flex; has to be parent
justify-content: aligns items horizontally and accepts the following values:
    flex-start; Items align to the left side of the container.
    flex-end; Items align to the right side of the container.
    center; Items align at the center of the container.
    space-between; Items display with equal spacing between them.
    space-around; Items display with equal spacing around them.
align-self: apply to individual items. property accepts the same values as align-items and its value for the specific item.
align-items: aligns items vertically and accepts the following values:
align-items: determines how the items as a whole are aligned within the container
    flex-start; Items align to the top of the container.
    flex-end; Items align to the bottom of the container.
    center; Items align at the vertical center of the container.
    baseline; Items display at the baseline of the container.
    stretch; Items are stretched to fit the container.
align-content: to set how multiple lines are spaced apart from each other. This property takes the following values:
align-content: determines the spacing between lines
    flex-start; Lines are packed at the top of the container.
    flex-end; Lines are packed at the bottom of the container.
    center; Lines are packed at the vertical center of the container.
    space-between; Lines display with equal spacing between them.
    space-around; Lines display with equal spacing around them.
    stretch; Lines are stretched to fit the container.
flex-direction: defines the direction items are placed in the container, and accepts the following values:
Notice that when the flex direction is a column, justify-content changes to the vertical and align-items to the horizontal.
    row; Items are placed the same as the text direction.
    row-reverse; Items are placed opposite to the text direction.
    column; Items are placed top to bottom.
    column-reverse; Items are placed bottom to top.
order: by default, items have a value of 0, but we can use this property to also set it to a positive or negative integer value (-2, -1, 0, 1, 2).
flex-flow: shorthand for flex-direction and flex-wrap The default value is row nowrap.
flex-wrap:
    nowrap; Every item is fit to a single line.
    wrap; Items wrap around to additional lines.
    wrap-reverse; Items wrap around to additional lines in reverse.
flex: is a shorthand property that can specify up to three different values
    flex-grow: controls the amount of avaliable space an element should take up. Accepts a unit-less value
    flex-shrink: if items are larger than the container, they shrink according to flex-shrink
    flex-basis: defines the initial size of an element before additonal space is distributed
Three values: flex-grow | flex-shrink | flex-basis 
flex: 2 2 10%;
*/
main {
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 500px;
    display: flex;
    text-align: center;
    color: white;
}
main .sidebar {
    background-color: purple;
    flex: 1 2 300px;
}
main .maincontent {
    background-color: cadetblue;
    flex: 2 2 800px;
}